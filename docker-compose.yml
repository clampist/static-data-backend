version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: sdp-postgres
    environment:
      POSTGRES_DB: static_data_platform_dev
      POSTGRES_USER: sdp_user
      POSTGRES_PASSWORD: dev_password
      POSTGRES_INITDB_ARGS: "--encoding=UTF-8"
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./docker/postgres/init:/docker-entrypoint-initdb.d
    networks:
      - sdp-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U sdp_user -d static_data_platform_dev"]
      interval: 10s
      timeout: 5s
      retries: 5

  # MySQL Database (Alternative)
  mysql:
    image: mysql:8.0
    container_name: sdp-mysql
    environment:
      MYSQL_ROOT_PASSWORD: root_password
      MYSQL_DATABASE: static_data_platform_dev
      MYSQL_USER: sdp_user
      MYSQL_PASSWORD: dev_password
    ports:
      - "3306:3306"
    volumes:
      - mysql_data:/var/lib/mysql
      - ./docker/mysql/init:/docker-entrypoint-initdb.d
    networks:
      - sdp-network
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      interval: 10s
      timeout: 5s
      retries: 5
    profiles:
      - mysql

  # Redis Cache
  redis:
    image: redis:7-alpine
    container_name: sdp-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - sdp-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    command: redis-server --appendonly yes

  # Java Application
  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: sdp-backend
    environment:
      SPRING_PROFILES_ACTIVE: docker
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/static_data_platform_dev
      SPRING_DATASOURCE_USERNAME: sdp_user
      SPRING_DATASOURCE_PASSWORD: dev_password
      SPRING_DATA_REDIS_HOST: redis
      SPRING_DATA_REDIS_PORT: 6379
      APP_JWT_SECRET: devSecretKey1234567890123456789012345678901234567890123456789012345678901234567890
      APP_JWT_EXPIRATION: 86400000
    ports:
      - "8080:8080"
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - sdp-network
    volumes:
      - ./logs:/app/logs
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/api/actuator/health"]
      interval: 30s
      timeout: 10s
      retries: 3

volumes:
  postgres_data:
  mysql_data:
  redis_data:

networks:
  sdp-network:
    driver: bridge
